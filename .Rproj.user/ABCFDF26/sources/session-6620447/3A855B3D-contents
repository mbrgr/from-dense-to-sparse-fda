library(tidyverse)
library(biLocPol)
library(parallel)
library(future.apply)
library(locpol)
source("R-Codes/functions.R")

sim.lococv = function(n, p, N, h.seq,
                      sigma = 1, sigma.bm = 1, deg = 2, grid = seq(0,1,0.001)){
  
  x=(0:p)/p
  
  #### leave one out cross validation ####
  max.errors.bw.cv =  future_replicate(N, {
    Z = replicate(n, bm(x, sigma = sigma.bm))
    e = replicate(n, rnorm(p+1, mean = 0, sd = sigma))
    Y.mat = mu(x) + e + Z
    cv.bw = cv.locpol(x, Y.mat, h.seq, deg = deg)
    cv.bw
  }, future.seed = T)
  
  print(paste("p =", p, "done"))
  timestamp()
  
  return(max.errors.bw.cv)
}



N = 1000
n = 600
alpha = 2.1
p = c(65, 115, 175, 275, 400, 550)
deg = floor(alpha)
H = sapply(p, function(x)(rev(seq(0.2, 3/x, -0.005))))
set.seed(89)
cl = makeCluster(detectCores( ) - 1);
plan(multisession);
timestamp()
cv.bw = sapply(1:length(p), function(j){
  sim.lococv(n, p[j], N, H[[j]])
})


stopCluster(cl);

cv.bw %>% dim()


save.image("R-Codes/data/bw_cross_validation.RData")
load("R-Codes/data/bw_cross_validation.RData")

cv.bw |> head()
colnames(cv.bw)  = p
cv.bw |> as_tibble() |> 
  pivot_longer(1:6, names_to = "p",values_to = "h") |> 
  mutate(p = factor(p, levels = c(65, 115, 175, 275, 400, 550))) |> 
  ggplot() + 
  geom_boxplot(aes(p, h, color = p), alpha = .9, show.legend = F) + 
  labs(y = "sup.err", subtitle = "n = 600") + 
  lims(y = c(0, 0.2))
 #theme_grey(base_size = 15) + 
# theme(plot.title = element_text(size = 14))

ggsave("Grafics/cv_bw_comparison.png", width = 5, height = 3.8, units = "in")

cv.bw |> as_tibble() |> 
  pivot_longer(1:6, names_to = "p",values_to = "h") |> 
  mutate(p = factor(p, levels = c(65, 115, 175, 275, 400, 550))) |> 
  group_by(p) |> 
  summarise(avg = mean(h), med = median(h), sd = sd(h))



##### Leave k-out Cross validation #####
sim_k_fold_cv = function(n, p, N, h.seq, k = 10, 
                      sigma = 1, sigma.bm = 1, deg = 2, grid = seq(0,1,0.001)){
  
  x=(0:p)/p
  
  #### leave one out cross validation ####
  max.errors.bw.cv =  future_replicate(N, {
    Z = replicate(n, bm(x, sigma = sigma.bm))
    e = replicate(n, rnorm(p+1, mean = 0, sd = sigma))
    Y.mat = mu(x) + e + Z
    cv.bw = k_fold_cv_locpol(x, Y.mat, h.seq, deg = deg, k = k)
    cv.bw
  }, future.seed = T)
  
  print(paste("p =", p, "done"))
  timestamp()
  
  return(max.errors.bw.cv)
}

N = 1000
n = 600
alpha = 2.1
p = c(65, 115, 175, 275, 400, 550)
deg = floor(alpha)
H = sapply(p, function(x)(rev(seq(0.2, 3/x, -0.005))))
k = 10

set.seed(156)
cl = makeCluster(detectCores( ) - 1);
plan(multisession);
timestamp()
k_fold_cv_bw = sapply(1:length(p), function(j){
  sim_k_fold_cv(n, p[j], N, H[[j]], k = k)
})

stopCluster(cl)

k_fold_cv_bw %>% dim()

k_fold_cv_bw |> head()
colnames(k_fold_cv_bw)  = p
k_fold_cv_bw |> as_tibble() |> 
  pivot_longer(1:6, names_to = "p",values_to = "h") |> 
  mutate(p = factor(p, levels = c(65, 115, 175, 275, 400, 550))) |> 
  ggplot() + 
  geom_boxplot(aes(p, h, color = p), alpha = .9, show.legend = F) + 
  labs(y = "sup.err", subtitle = "n = 600") + 
  lims(y = c(0, 0.2))
#theme_grey(base_size = 15) + 
# theme(plot.title = element_text(size = 14))

ggsave("Grafics/k_fold_cv_bw_comparison.png", width = 5, height = 3.8, units = "in")

k_fold_cv_bw |> as_tibble() |> 
  pivot_longer(1:6, names_to = "p",values_to = "h") |> 
  mutate(p = factor(p, levels = c(65, 115, 175, 275, 400, 550))) |> 
  group_by(p) |> 
  summarise(avg = mean(h), med = median(h), sd(h))


save.image("R-Codes/data/k_fold_bw_cross_validation.RData")
load("R-Codes/data/bw_cross_validation.RData")
