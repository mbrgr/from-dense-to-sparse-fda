y = ~x,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est_wd,
size = .4, alpha = .7, colorscale = cs2,
showscale = F) |>
back_layout(x = 1.9, y = .9, z = 1.3)
figure37b
save_image(figure32b,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
save.image("cov/data/illustrations.RData")
rm(list = setdiff(ls(),
c("figure31a", "figure31b",
"figure32a", "figure32b",
"figure37a", "figure37b")))
save.image("cov/data/plotly_illustration_figures.RData")
load("cov/data/plotly_illustration_figures.RData")
saveWidget(figure31a, "figure31a.html", selfcontained = T)
library(plotly)
library(htmlwidgets)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(figure31a, "figure31a.html", selfcontained = T)
saveWidget(figure31a, "html_figures/figure31a.html", selfcontained = T)
saveWidget(figure31a, "interactive_html_figures/figure31a.html", selfcontained = T)
saveWidget(figure31b, "interactive_html_figures/figure31a.html", selfcontained = T)
saveWidget(figure31b, "doc/figure31a.html", selfcontained = T)
saveWidget(figure31b, "docs/figure31a.html", selfcontained = T)
saveWidget(figure31b, "docs/figure31b.html", selfcontained = T)
saveWidget(figure31a, "docs/figure31a.html", selfcontained = T)
# for the html figura 3.1a and 3.1b are identical
saveWidget(figure32a, "docs/figure32a.html", selfcontained = T)
saveWidget(figure32b, "docs/figure32b.html", selfcontained = T)
library(plotly)
library(htmlwidgets)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(figure31a, "docs/figure31.html", selfcontained = T)
# for the html figura 3.1a and 3.1b are identical
saveWidget(figure32a, "docs/figure32a.html", selfcontained = T)
saveWidget(figure32b, "docs/figure32b.html", selfcontained = T)
saveWidget(figure37a, "docs/figure37a.html", selfcontained = T)
saveWidget(figure37a, "docs/figure37a.html", selfcontained = T)
saveWidget(figure37b, "docs/figure37b.html", selfcontained = T)
figure37a
#### results ####
# instead of evaluating the functions all again the results can be loaded with
load("cov/data/illustrations.RData")
##### Figure 3.7 (b) #####
figure37b = plot_ly() |>
add_surface(x = ~x,
y = ~x,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est_wd,
size = .4, alpha = .7, colorscale = cs2,
showscale = F) |>
back_layout(x = 1.9, y = .9, z = 1.3)
figure37b
##### Figure 3.7 (a) #####
figure37a = plot_ly() |>
add_surface(x = ~x,
y = ~x,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est2,
size = .4, alpha = .2, colorscale = cs2,
showscale = F)  |> back_layout(x = 1.9, y = .9, z = 1.3)
figure37a
save_image(figure32b,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
##### Figure 3.7 (b) #####
figure37b = plot_ly() |>
add_surface(x = ~x,
y = ~x,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est_wd,
size = .4, alpha = .7, colorscale = cs2,
showscale = F) |>
back_layout(x = 1.9, y = .9, z = 1.3)
figure37b
save_image(figure32b,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
save.image("cov/data/illustrations.RData")
rm(list = setdiff(ls(),
c("figure31a", "figure31b",
"figure32a", "figure32b",
"figure37a", "figure37b")))
save.image("cov/data/plotly_illustration_figures.RData")
load("cov/data/plotly_illustration_figures.RData")
saveWidget(figure31a, "docs/figure31.html", selfcontained = T)
# for the html figura 3.1a and 3.1b are identical
saveWidget(figure32a, "docs/figure32a.html", selfcontained = T)
saveWidget(figure32b, "docs/figure32b.html", selfcontained = T)
saveWidget(figure37a, "docs/figure37a.html", selfcontained = T)
View(figure37a)
View(figure37a)
figure37b
##### Figure 3.7 (a) #####
figure37a = plot_ly() |>
add_surface(x = ~x,
y = ~x,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est2,
size = .4, alpha = .2, colorscale = cs2,
showscale = F)
#### results ####
# instead of evaluating the functions all again the results can be loaded with
load("cov/data/illustrations.RData")
rm(list = setdiff(ls(),
c("figure31a", "figure31b",
"figure32a", "figure32b",
"figure37a", "figure37b")))
figure37b
figure32b
#### results ####
# instead of evaluating the functions all again the results can be loaded with
load("cov/data/illustrations.RData")
rm(list = setdiff(ls(),
c("figure31a", "figure31b",
"figure32a", "figure32b",
"figure37a", "figure37b",
"c_val2")))
save.image("cov/data/plotly_illustration_figures.RData")
figure37b
#### results ####
# instead of evaluating the functions all again the results can be loaded with
load("cov/data/illustrations.RData")
est2
dim(est2)
dim(c_val2)
dim(df.all)
head(df.all)
length(x)
##### Figure 3.7 (b) #####
x = observation_grid(x)
x
#### results ####
# instead of evaluating the functions all again the results can be loaded with
load("cov/data/illustrations.RData")
##### Figure 3.7 (a) #####
df_37 = data.frame(observation_grid(p, comp = "full"), c_val2, est2)
c_val2
est2
##### Figure 3.7 (a) #####
df_37 = data.frame(observation_grid(p, comp = "full"),
as.vector(c_val2),
as.vector(est2))
observation_grid(p, comp = "full")
c_val2
p
##### Figure 3.7 (a) #####
df_37 = data.frame(observation_grid(150, comp = "full"),
as.vector(c_val2),
as.vector(est2))
##### Figure 3.7 (a) #####
df_37 = data.frame(observation_grid(p.eval, comp = "full"),
as.vector(c_val2),
as.vector(est2))
figure37a = plot_ly(df_37) |>
add_surface(x = ~x,
y = ~x,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est2,
size = .4, alpha = .2, colorscale = cs2,
showscale = F)  |> back_layout(x = 1.9, y = .9, z = 1.3)
figure37a
save_image(figure37a,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
##### Figure 3.7 (a) #####
df_37 = data.frame(observation_grid(p.eval, comp = "full"),
as.vector(c_val2),
as.vector(est2),
as.vector(est_wd))
figure37a = plot_ly(df_37) |>
add_surface(x = ~x,
y = ~x,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est2,
size = .4, alpha = .2, colorscale = cs2,
showscale = F)  |> back_layout(x = 1.9, y = .9, z = 1.3)
figure37a
save_image(figure37a,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
##### Figure 3.7 (b) #####
figure37b = plot_ly(df_37) |>
add_surface(x = ~x1,
y = ~x2,
z = ~c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = ~x,
y = ~x,
z = ~est_wd,
size = .4, alpha = .7, colorscale = cs2,
showscale = F) |>
back_layout(x = 1.9, y = .9, z = 1.3)
save_image(figure37b,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
save.image("cov/data/illustrations.RData")
rm(list = setdiff(ls(),
c("figure31a", "figure31b",
"figure32a", "figure32b",
"figure37a", "figure37b",
"c_val2")))
rm(list = setdiff(ls(),
c("figure31a", "figure31b",
"figure32a", "figure32b",
"figure37a", "figure37b")))
save.image("cov/data/plotly_illustration_figures.RData")
saveWidget(figure37a, "docs/figure37a.html", selfcontained = T)
figure37b
##### Figure 3.7 (b) #####
figure37b = plot_ly(df_37) |>
add_surface(x = x1,
y = x2,
z = c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = x,
y = x,
z = est_wd,
size = .4, alpha = .7, colorscale = cs2,
showscale = F) |>
back_layout(x = 1.9, y = .9, z = 1.3)
#### results ####
# instead of evaluating the functions all again the results can be loaded with
load("cov/data/illustrations.RData")
figure37a = plot_ly(df_37) |>
add_surface(x = x,
y = x,
z = c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = x,
y = x,
z = est2,
size = .4, alpha = .2, colorscale = cs2,
showscale = F)  |> back_layout(x = 1.9, y = .9, z = 1.3)
figure37a
save_image(figure37a,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
##### Figure 3.7 (b) #####
figure37b = plot_ly(df_37) |>
add_surface(x = x1,
y = x2,
z = c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = x,
y = x,
z = est_wd,
size = .4, alpha = .7, colorscale = cs2,
showscale = F) |>
back_layout(x = 1.9, y = .9, z = 1.3)
figure37b
save_image(figure37b,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
##### Figure 3.7 (b) #####
figure37b = plot_ly(df_37) |>
add_surface(x = x,
y = x,
z = c_val2,
size = .4, alpha = .7,
showscale = F) |>
add_surface(x = x,
y = x,
z = est_wd,
size = .4, alpha = .7, colorscale = cs2,
showscale = F) |>
back_layout(x = 1.9, y = .9, z = 1.3)
figure37b
save_image(figure37b,
file = "cov/grafics/2rv_estimate_m1_h01.pdf",
width = 600, height = 750)
save.image("cov/data/illustrations.RData")
rm(list = setdiff(ls(),
c("figure31a", "figure31b",
"figure32a", "figure32b",
"figure37a", "figure37b")))
figure37b
save.image("cov/data/plotly_illustration_figures.RData")
load("cov/data/plotly_illustration_figures.RData")
saveWidget(figure37a, "docs/figure37a.html", selfcontained = T)
saveWidget(figure37b, "docs/figure37b.html", selfcontained = T)
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
saveWidget(tagList(h1("Figure 3.2 (a)"), figure32a), "docs/figure32a.html", selfcontained = T)
saveWidget(tagList(h1("Figure 3.2 (b)"), figure32b), "docs/figure32b.html", selfcontained = T)
saveWidget(tagList(h1("Figure 3.7 (a)"), figure37a), "docs/figure37a.html", selfcontained = T)
saveWidget(tagList(h1("Figure 3.7 (b)"), figure37b), "docs/figure37b.html", selfcontained = T)
library(plotly)
library(htmlwidgets)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
library(htmltolls)
library(htmltools)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
saveWidget(tagList(h1("Figure 3.2 (a)"), figure32a), "docs/figure32a.html", selfcontained = T)
saveWidget(tagList(h1("Figure 3.2 (b)"), figure32b), "docs/figure32b.html", selfcontained = T)
saveWidget(tagList(h1("Figure 3.7 (a)"), figure37a), "docs/figure37a.html", selfcontained = T)
saveWidget(tagList(h1("Figure 3.7 (b)"), figure37b), "docs/figure37b.html", selfcontained = T)
tagList(h1("Figure 3.1")
)
tagList(h1("Figure 3.1"), figure31a)
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
install.packages("htmltools")
library(plotly)
library(htmlwidgets)
library(htmltools)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
saveWidget(tagList(h1("Figure 3.2 (a)"), figure32a), "docs/figure32a.html", selfcontained = T)
install.packages("htmltools")
library(plotly)
library(htmlwidgets)
library(htmltools)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
detach("package:htmltools", unload = TRUE)
remove.packages("htmltools")
install.packages("htmltools")
detach("package:htmlwidgets", unload = TRUE)
detach("package:plotly", unload = TRUE)
library(htmlwidgets)
detach("package:htmlwidgets", unload = TRUE)
install.packages("htmltools")
library(plotly)
library(htmlwidgets)
library(htmltools)
library(htmltools)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
htmltools::tagList()
tagList(h1("Figure 3.1"), figure31a)
install.packages("htmlwidgets")
library(plotly)
library(htmlwidgets)
library(htmltools)
load("cov/data/plotly_illustration_figures.RData")
saveWidget(tagList(h1("Figure 3.1"), figure31a), "docs/figure31.html", selfcontained = T) # for the html figura 3.1a and 3.1b are identical
.libPaths()
find.package("htmltools")
library(biLocPol) # please install this package from Github first. See "README.md" file for instructions
library(future.apply)
library(tidyverse)
library(tictoc)
library(plotly)
source("cov/functions.R")
# Parameter OU Process
theta = 2; sigma = 3
sd = 0.75
p.eval = 150
p = 50
n = 100#
h = 0.6
x.design = (1:p - 0.5)/p
#set.seed(99)
Y = biLocPol::OU(n, x.design, sigma = sigma, alpha = theta) + matrix(rnorm(n * p, 0, sd), n, p) # n x p
Z = observation_transformation(Y)
w = local_polynomial_weights(p, h, p.eval, F, m = 2, grid.type = "less", del = 1)
estimate = eval_weights(w, Z)[,,3]
x = observation_grid(p.eval, comp = "full")[1:p.eval, 1]
G10 = matrix(apply(observation_grid(p.eval, comp = "full"), 1, del10_cov_OU), p.eval, p.eval)
UP = upper.tri(G10, diag = T)
G10_UP = G10
G10_UP[!UP] = NA
G10_DN = G10
G10_DN[UP] = NA
estimate_UP = estimate
estimate_DN = estimate
estimate_DN[UP] = NA
estimate_UP[!UP] = NA
trim = which(x.design > 0.2 & x.design < 0.8)
cs2 = lisG10_UPcs2 = list(c(0, 1), c("lightblue", "darkred"))
##### Figure 3.9 (a) #####
figure39a = plot_ly() |>
add_surface(x = x, y = x, z = G10_UP,
alpha = .8, showscale = F) |>
add_surface(x = x, y = x, z = G10_DN,
alpha = .8, showscale = F) |>
add_surface(x = x, y = x, z = estimate_UP, alpha = .8, colorscale = cs2,
showscale = F) |>
add_surface(x = x, y = x, z = estimate_DN,
alpha = .8, colorscale = cs2, showscale = F) |>
front_layout(x = -.9, y = -2.3, z = .7)
figure39a
set.seed(99)
Y = biLocPol::OU(n, x.design, sigma = sigma, alpha = theta) + matrix(rnorm(n * p, 0, sd), n, p) # n x p
Z = observation_transformation(Y)
estimate = eval_weights(w, Z)[,,3]
x = observation_grid(p.eval, comp = "full")[1:p.eval, 1]
G10 = matrix(apply(observation_grid(p.eval, comp = "full"), 1, del10_cov_OU), p.eval, p.eval)
UP = upper.tri(G10, diag = T)
G10_UP = G10
G10_UP[!UP] = NA
G10_DN = G10
G10_DN[UP] = NA
estimate_UP = estimate
estimate_DN = estimate
estimate_DN[UP] = NA
estimate_UP[!UP] = NA
trim = which(x.design > 0.2 & x.design < 0.8)
cs2 = lisG10_UPcs2 = list(c(0, 1), c("lightblue", "darkred"))
##### Figure 3.9 (a) #####
figure39a = plot_ly() |>
add_surface(x = x, y = x, z = G10_UP,
alpha = .8, showscale = F) |>
add_surface(x = x, y = x, z = G10_DN,
alpha = .8, showscale = F) |>
add_surface(x = x, y = x, z = estimate_UP, alpha = .8, colorscale = cs2,
showscale = F) |>
add_surface(x = x, y = x, z = estimate_DN,
alpha = .8, colorscale = cs2, showscale = F) |>
front_layout(x = -.9, y = -2.3, z = .7)
figure39a
save_image(figure39a,
file = "cov/grafics/OU_G10.pdf",
width = 600, height = 750)
rm(w)
save.image("cov/data/results_figure_3_9a.RData")
del10_cov_z_2rv = function(x){
4/9 * pi * cos(pi * x[1]) * sin(pi * x[2]) - 10/9 * pi * sin(1.25 * pi * x[1]) * cos(pi * 1.25 * x[2])
}
del01_cov_z_2rv = function(x){
del10_cov_z_2rv(c(x[2], x[1]))
}
# data
n = 100
#h2 = 0.3
h3 = 0.2
#w2 = local_polynomial_weights(p, h2, p.eval, F, m = 2, grid.type = "less", del = 1)
w3 = local_polynomial_weights(p, h3, p.eval, F, m = 2, grid.type = "less", del = 1)
#h3 = 0.2
w2 = local_polynomial_weights(p, h2, p.eval, F, m = 2, grid.type = "less", del = 1)
h2 = 0.3
#h3 = 0.2
w2 = local_polynomial_weights(p, h2, p.eval, F, m = 2, grid.type = "less", del = 1)
#h3 = 0.2
w2 = local_polynomial_weights(p, h2, p.eval, T, m = 2, grid.type = "less", del = 1)
#w3 = local_polynomial_weights(p, h3, p.eval, F, m = 2, grid.type = "less", del = 1)
set.seed(45)
Y2 = biLocPol::z_2rv(n, p) + matrix(rnorm(n * p, 0, sd), n, p) # n x p
Z2 = observation_transformation(Y2)
estimate_2 = eval_weights(w3, Z2)[,,3]
G10_2 = matrix(apply(observation_grid(p.eval, comp = "full"), 1, del01_cov_z_2rv), p.eval, p.eval)
UP = upper.tri(G10_2, diag = T)
DN = lower.tri(G10_2, diag = F)
estimate_2UP = estimate_2
estimate_2DN = estimate_2
estimate_2DN[UP] = NA
estimate_2UP[DN] = NA
##### Figure 3.9 (b) #####
figure39b = plot_ly() |>
add_surface(x = x, y = x, z = G10_2, alpha = .8) |>
add_surface(x = x, y = x, z = estimate_2UP, alpha = .8, colorscale = cs2, showscale = F) |>
add_surface(x = x, y = x, z = estimate_2DN, alpha = .8, colorscale = cs2, showscale = F) |>
front_layout(x = -.9, y = -2.3, z = .7)
estimate_2 = eval_weights(w1, Z2)[,,3]
estimate_2 = eval_weights(w2, Z2)[,,3]
G10_2 = matrix(apply(observation_grid(p.eval, comp = "full"), 1, del01_cov_z_2rv), p.eval, p.eval)
UP = upper.tri(G10_2, diag = T)
DN = lower.tri(G10_2, diag = F)
estimate_2UP = estimate_2
estimate_2DN = estimate_2
estimate_2DN[UP] = NA
estimate_2UP[DN] = NA
##### Figure 3.9 (b) #####
figure39b = plot_ly() |>
add_surface(x = x, y = x, z = G10_2, alpha = .8) |>
add_surface(x = x, y = x, z = estimate_2UP, alpha = .8, colorscale = cs2, showscale = F) |>
add_surface(x = x, y = x, z = estimate_2DN, alpha = .8, colorscale = cs2, showscale = F) |>
front_layout(x = -.9, y = -2.3, z = .7)
figure39b
##### Figure 3.9 (b) #####
figure39b = plot_ly() |>
add_surface(x = x, y = x, z = G10_2, alpha = .8, showscale = F) |>
add_surface(x = x, y = x, z = estimate_2UP, alpha = .8, colorscale = cs2, showscale = F) |>
add_surface(x = x, y = x, z = estimate_2DN, alpha = .8, colorscale = cs2, showscale = F) |>
front_layout(x = -.9, y = -2.3, z = .7)
figure39b
